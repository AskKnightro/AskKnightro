-- V3__identity_columns.sql
-- Make primary keys auto-generated and align sequences safely (handles empty tables).

----------------------
-- teacher.teacher_id
----------------------
DO $$
    DECLARE
        seq_name text;
        max_id   bigint;
    BEGIN
        IF NOT EXISTS (
            SELECT 1 FROM information_schema.columns
            WHERE table_schema='public' AND table_name='teacher'
              AND column_name='teacher_id' AND is_identity='YES'
        ) THEN
            BEGIN
                ALTER TABLE public.teacher
                    ALTER COLUMN teacher_id
                        ADD GENERATED BY DEFAULT AS IDENTITY;
            EXCEPTION WHEN duplicate_object THEN NULL;
            END;
        END IF;

        SELECT pg_get_serial_sequence('public.teacher','teacher_id') INTO seq_name;
        IF seq_name IS NOT NULL THEN
            SELECT COALESCE(MAX(teacher_id), 0) INTO max_id FROM public.teacher;
            IF max_id < 1 THEN
                PERFORM setval(seq_name, 1, false);
            ELSE
                PERFORM setval(seq_name, max_id, true);
            END IF;
        END IF;
    END $$;

----------------------
-- student.student_id
----------------------
DO $$
    DECLARE
        seq_name text;
        max_id   bigint;
    BEGIN
        IF NOT EXISTS (
            SELECT 1 FROM information_schema.columns
            WHERE table_schema='public' AND table_name='student'
              AND column_name='student_id' AND is_identity='YES'
        ) THEN
            BEGIN
                ALTER TABLE public.student
                    ALTER COLUMN student_id
                        ADD GENERATED BY DEFAULT AS IDENTITY;
            EXCEPTION WHEN duplicate_object THEN NULL;
            END;
        END IF;

        SELECT pg_get_serial_sequence('public.student','student_id') INTO seq_name;
        IF seq_name IS NOT NULL THEN
            SELECT COALESCE(MAX(student_id), 0) INTO max_id FROM public.student;
            IF max_id < 1 THEN
                PERFORM setval(seq_name, 1, false);
            ELSE
                PERFORM setval(seq_name, max_id, true);
            END IF;
        END IF;
    END $$;

------------------
-- class.class_id
------------------
DO $$
    DECLARE
        seq_name text;
        max_id   bigint;
    BEGIN
        IF NOT EXISTS (
            SELECT 1 FROM information_schema.columns
            WHERE table_schema='public' AND table_name='class'
              AND column_name='class_id' AND is_identity='YES'
        ) THEN
            BEGIN
                ALTER TABLE public.class
                    ALTER COLUMN class_id
                        ADD GENERATED BY DEFAULT AS IDENTITY;
            EXCEPTION WHEN duplicate_object THEN NULL;
            END;
        END IF;

        SELECT pg_get_serial_sequence('public.class','class_id') INTO seq_name;
        IF seq_name IS NOT NULL THEN
            SELECT COALESCE(MAX(class_id), 0) INTO max_id FROM public.class;
            IF max_id < 1 THEN
                PERFORM setval(seq_name, 1, false);
            ELSE
                PERFORM setval(seq_name, max_id, true);
            END IF;
        END IF;
    END $$;

-----------------------------------
-- course_material.id
-----------------------------------
DO $$
    DECLARE
        seq_name text;
        max_id   bigint;
    BEGIN
        IF NOT EXISTS (
            SELECT 1 FROM information_schema.columns
            WHERE table_schema='public' AND table_name='course_material'
              AND column_name='id' AND is_identity='YES'
        ) THEN
            BEGIN
                ALTER TABLE public.course_material
                    ALTER COLUMN id
                        ADD GENERATED BY DEFAULT AS IDENTITY;
            EXCEPTION WHEN duplicate_object THEN NULL;
            END;
        END IF;

        SELECT pg_get_serial_sequence('public.course_material','id') INTO seq_name;
        IF seq_name IS NOT NULL THEN
            SELECT COALESCE(MAX(id), 0) INTO max_id FROM public.course_material;
            IF max_id < 1 THEN
                PERFORM setval(seq_name, 1, false);
            ELSE
                PERFORM setval(seq_name, max_id, true);
            END IF;
        END IF;
    END $$;

----------------------------
-- enrollment.enrollment_id
----------------------------
DO $$
    DECLARE
        seq_name text;
        max_id   bigint;
    BEGIN
        IF NOT EXISTS (
            SELECT 1 FROM information_schema.columns
            WHERE table_schema='public' AND table_name='enrollment'
              AND column_name='enrollment_id' AND is_identity='YES'
        ) THEN
            BEGIN
                ALTER TABLE public.enrollment
                    ALTER COLUMN enrollment_id
                        ADD GENERATED BY DEFAULT AS IDENTITY;
            EXCEPTION WHEN duplicate_object THEN NULL;
            END;
        END IF;

        SELECT pg_get_serial_sequence('public.enrollment','enrollment_id') INTO seq_name;
        IF seq_name IS NOT NULL THEN
            SELECT COALESCE(MAX(enrollment_id), 0) INTO max_id FROM public.enrollment;
            IF max_id < 1 THEN
                PERFORM setval(seq_name, 1, false);
            ELSE
                PERFORM setval(seq_name, max_id, true);
            END IF;
        END IF;
    END $$;

--------------------------
-- chat_session.session_id
--------------------------
DO $$
    DECLARE
        seq_name text;
        max_id   bigint;
    BEGIN
        IF NOT EXISTS (
            SELECT 1 FROM information_schema.columns
            WHERE table_schema='public' AND table_name='chat_session'
              AND column_name='session_id' AND is_identity='YES'
        ) THEN
            BEGIN
                ALTER TABLE public.chat_session
                    ALTER COLUMN session_id
                        ADD GENERATED BY DEFAULT AS IDENTITY;
            EXCEPTION WHEN duplicate_object THEN NULL;
            END;
        END IF;

        SELECT pg_get_serial_sequence('public.chat_session','session_id') INTO seq_name;
        IF seq_name IS NOT NULL THEN
            SELECT COALESCE(MAX(session_id), 0) INTO max_id FROM public.chat_session;
            IF max_id < 1 THEN
                PERFORM setval(seq_name, 1, false);
            ELSE
                PERFORM setval(seq_name, max_id, true);
            END IF;
        END IF;
    END $$;

--------------------------
-- chat_message.message_id
--------------------------
DO $$
    DECLARE
        seq_name text;
        max_id   bigint;
    BEGIN
        IF NOT EXISTS (
            SELECT 1 FROM information_schema.columns
            WHERE table_schema='public' AND table_name='chat_message'
              AND column_name='message_id' AND is_identity='YES'
        ) THEN
            BEGIN
                ALTER TABLE public.chat_message
                    ALTER COLUMN message_id
                        ADD GENERATED BY DEFAULT AS IDENTITY;
            EXCEPTION WHEN duplicate_object THEN NULL;
            END;
        END IF;

        SELECT pg_get_serial_sequence('public.chat_message','message_id') INTO seq_name;
        IF seq_name IS NOT NULL THEN
            SELECT COALESCE(MAX(message_id), 0) INTO max_id FROM public.chat_message;
            IF max_id < 1 THEN
                PERFORM setval(seq_name, 1, false);
            ELSE
                PERFORM setval(seq_name, max_id, true);
            END IF;
        END IF;
    END $$;

--------------
-- outbox.id
--------------
DO $$
    DECLARE
        seq_name text;
        max_id   bigint;
    BEGIN
        IF NOT EXISTS (
            SELECT 1 FROM information_schema.columns
            WHERE table_schema='public' AND table_name='outbox'
              AND column_name='id' AND is_identity='YES'
        ) THEN
            BEGIN
                ALTER TABLE public.outbox
                    ALTER COLUMN id
                        ADD GENERATED BY DEFAULT AS IDENTITY;
            EXCEPTION WHEN duplicate_object THEN NULL;
            END;
        END IF;

        SELECT pg_get_serial_sequence('public.outbox','id') INTO seq_name;
        IF seq_name IS NOT NULL THEN
            SELECT COALESCE(MAX(id), 0) INTO max_id FROM public.outbox;
            IF max_id < 1 THEN
                PERFORM setval(seq_name, 1, false);
            ELSE
                PERFORM setval(seq_name, max_id, true);
            END IF;
        END IF;
    END $$;