# --- Server (use 8081 locally so it doesn?t collide with the containerized backend) ---
server.port=8081

# --- Postgres (host->container mapped in compose: 5433:5432) ---
spring.datasource.url=jdbc:postgresql://localhost:5433/${POSTGRES_DB:askknightro}
spring.datasource.username=${POSTGRES_USER:postgres}
spring.datasource.password=${POSTGRES_PASSWORD:root}

# --- Flyway ---
spring.flyway.enabled=true

# --- Milvus: point to the host-mapped port, not the docker DNS name ---
spring.ai.vectorstore.milvus.client.host=localhost
spring.ai.vectorstore.milvus.client.port=19530
spring.ai.vectorstore.milvus.client.secure=false
spring.ai.vectorstore.milvus.collection-name=vector_store4
spring.ai.vectorstore.milvus.databaseName=default
spring.ai.vectorstore.milvus.embeddingDimension=1536
spring.ai.vectorstore.milvus.indexType=IVF_FLAT
spring.ai.vectorstore.milvus.metricType=COSINE

# --- OpenAI ---
# NOTE: your application.properties references ${OPENAI_API_KEY} (not SPRING_AI_OPENAI_API_KEY)
spring.ai.openai.api-key=${OPENAI_API_KEY}

# Embedding model (as you had)
spring.ai.openai.embedding.options.model=text-embedding-3-small